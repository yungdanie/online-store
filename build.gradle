plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ru.practicum'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

ext {
	mapstructVersion = "1.6.3"
	jakartaValidationApiVersion = "3.1.1"
	hibernateVersion = "6.6.13.Final"
}

repositories {
	mavenCentral()
}

dependencies {
	// spring mvc
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.testcontainers:testcontainers'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation "org.springframework.boot:spring-boot-testcontainers"
	testImplementation "org.testcontainers:junit-jupiter"

	// ORM-JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'
	implementation "org.hibernate:hibernate-core:${hibernateVersion}"

	// validation
	implementation "jakarta.validation:jakarta.validation-api:${jakartaValidationApiVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//frontend
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// lombok
	compileOnly "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok"

	// mapstruct
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	launchScript()
	archiveFileName = "online-store.jar"
}
